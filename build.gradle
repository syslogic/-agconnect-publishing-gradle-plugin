buildscript {
    ext {
        agp_version = '7.2.1'
        agcp_version = '1.7.0.300'
        gson_version = '2.9.0'
        junit_version = '5.8.2'
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath "com.huawei.agconnect:agcp:$agcp_version"
    }
    repositories {
        mavenCentral()
        google()
        maven { url 'https://developer.huawei.com/repo/' }
    }
}

plugins {
    id 'org.gradle.java-gradle-plugin'
    id 'maven-publish'
}

wrapper {
    distributionType Wrapper.DistributionType.BIN
    version '7.4.2'
}

repositories {
    google()
    mavenCentral()
    mavenLocal()
}

gradlePlugin {
    plugins {
        PublishingPlugin {
            id = 'io.syslogic.agconnect.publishing'
            displayName = "AgConnectPublishingPlugin"
            description = 'Huawei AppGallery Connect Publishing Plugin'
            implementationClass = 'io.syslogic.agconnect.PublishingPlugin'
        }
    }
}

dependencies {

    compileOnly gradleApi()
    compileOnly "com.android.tools.build:gradle-api:$agp_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "org.apache.httpcomponents:httpcore:4.4.14"
    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "org.apache.httpcomponents:httpmime:4.5.6"
    implementation "org.jetbrains:annotations:22.0.0"

    testImplementation gradleTestKit()
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

task javadocs(type: Javadoc) {

    title = "AgConnectPublishingPlugin ${agp_version} API"
    source = java.sourceSets.main.java.srcDirs
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    configurations.implementation.setCanBeResolved(true)
    classpath = files(new File(System.getProperty('java.home') + File.separator + 'lib' + File.separator + 'rt.jar'))
    classpath += configurations.implementation
    failOnError false

    // options.verbose()
    options.links "https://docs.oracle.com/en/java/javase/11/docs/api/"
    options.linkSource true
    options.author true
}
javadoc.onlyIf {
    new File("$buildDir/libs").exists()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from java.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = 'io.syslogic'
version = agp_version

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = group
                artifactId = 'agconnect-publishing-gradle-plugin'
                from components.getByName("java")
                version = agp_version
                pom {
                    name = 'AgConnect Publishing Plugin'
                    description = 'Huawei AppGallery Connect Publishing Plugin'
                    url = "https://github.com/syslogic/${artifactId}"
                    scm {
                        connection = "scm:git:git://github.com/syslogic/${artifactId}.git"
                        developerConnection = "scm:git:ssh://github.com/syslogic/${artifactId}.git"
                        url = "https://github.com/syslogic/${artifactId}/"
                    }
                }
            }
        }
    }
}